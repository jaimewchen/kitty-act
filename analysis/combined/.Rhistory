geom_smooth(aes(color=current_category_training_level),method="lm",se=F,alpha=0.5)+
geom_smooth(method="lm")
p4 <- combined_sampling_data %>%
filter(number_training_images==3 & sample_group=="children") %>%
ggplot(aes(age_years,sample_outside_choice))+
geom_smooth(aes(color=current_category_training_level),method="lm",se=F,alpha=0.5)+
geom_smooth(method="lm")
(p1+p2)/(p3+p4)
library(here)
library(tidyverse)
library(ggplot2)
library(viridisLite)
library(lme4)
library(ggstance)
library(cowplot)
library(AICcmodavg)
library(RColorBrewer)
library(jsonlite)
library(tidyjson)
library(rlang)
library(car)
library(nnet)
library(mlogit)
library(lmerTest)
library(assertthat)
library(knitr)
library(patchwork)
source("helper.R")
adult_data_path <- here("..","v1a","data","processed", "kitty-act_v1a-alldata-processed.csv")
adult_sampling_data_path <- here("..","v1a","data","processed", "kitty-act_v1a-sampling-data.csv")
adult_test_data_path <- here("..","v1a","data","processed", "kitty-act_v1a-test-data.csv")
adult_test_data_long_path <- here("..","v1a","data","processed", "kitty-act_v1a-test-data-long.csv")
write_path <- here("processed_data")
figure_path <- here("figures")
adult_d <- read_csv(adult_data_path) %>%
mutate(number_training_images_order = case_when(
number_training_image_order_vector == "[1,3]" ~ "One-Three",
number_training_image_order_vector == "[3,1]" ~ "Three-One",
)) %>%
mutate(
sample_group = "adults"
) %>%
rename(participant=subject)
adult_sampling_data <- read_csv(adult_sampling_data_path) %>%
mutate(number_training_image_order = case_when(
number_training_image_order_vector == "[1,3]" ~ "One-Three",
number_training_image_order_vector == "[3,1]" ~ "Three-One",
)) %>%
mutate(
sample_group = "adults"
)%>%
rename(participant=subject)%>%
mutate(
round = case_when(
trial_number %in% c(1,2,3) ~ 1,
trial_number %in% c(4,5,6) ~ 2)
) %>%
mutate(
trial_counter=trial_number
)
adult_test_array_clean <- read_csv(adult_test_data_path) %>%
mutate(number_training_image_order_vector = case_when(
number_training_image_order_vector == "[1,3]" ~ "One-Three",
number_training_image_order_vector == "[3,1]" ~ "Three-One",
)) %>%
mutate(
sample_group = "adults"
)%>%
rename(participant=subject) %>%
mutate(
round = case_when(
trial_number %in% c(1,2,3) ~ 1,
trial_number %in% c(4,5,6) ~ 2)
)
adult_test_array_options_clean <- read_csv(adult_test_data_long_path) %>%
mutate(number_training_images_order = case_when(
number_training_image_order_vector == "[1,3]" ~ "One-Three",
number_training_image_order_vector == "[3,1]" ~ "Three-One",
)) %>%
mutate(
sample_group = "adults"
)%>%
rename(participant=subject) %>%
mutate(
round = case_when(
trial_number %in% c(1,2,3) ~ 1,
trial_number %in% c(4,5,6) ~ 2)
)
kid_data_path <- here("..","v1","processed_data", "kitty-act-v1-alldata.csv")
kid_sampling_data_path <- here("..","v1","processed_data", "kitty-act-v1-processed_data_sampling.csv")
kid_test_data_path <- here("..","v1","processed_data", "kitty-act-v1-processed_data.csv")
kid_test_data_long_path <- here("..","v1","processed_data", "kitty-act-v1-processed_data_long.csv")
kid_participant_info_path <- here("..","v1","processed_data","kitty-act-v1-participant_info.csv")
kid_d <- read_csv(kid_data_path) %>%
mutate(number_training_images_order = case_when(
number_training_image_order_vector == "[1,3]" ~ "One-Three",
number_training_image_order_vector == "[3,1]" ~ "Three-One",
)) %>%
mutate(
sample_group = "children"
)
kid_sampling_data <- read_csv(kid_sampling_data_path) %>%
mutate(number_training_images_order = case_when(
number_training_image_order_vector == "[1,3]" ~ "One-Three",
number_training_image_order_vector == "[3,1]" ~ "Three-One",
))  %>%
mutate(
sample_group = "children"
)
kid_test_array_clean <- read_csv(kid_test_data_path) %>%
mutate(number_training_images_order = case_when(
number_training_image_order_vector == "[1,3]" ~ "One-Three",
number_training_image_order_vector == "[3,1]" ~ "Three-One",
))  %>%
mutate(
sample_group = "children"
)
kid_test_array_options_clean <- read_csv(kid_test_data_long_path) %>%
mutate(number_training_images_order = case_when(
number_training_image_order_vector == "[1,3]" ~ "One-Three",
number_training_image_order_vector == "[3,1]" ~ "Three-One",
))  %>%
mutate(
sample_group = "children"
)
#participant info
kid_participant_info <- read_csv(kid_participant_info_path) %>%
filter(pilot == "no")  %>%
mutate(
sample_group = "children"
)
kid_participant_info$age_mos_int <- kid_participant_info$age_mos
kid_participant_info <- kid_participant_info %>%
mutate(resid_month_decimal=age_day_count/30.417) %>%
mutate(age_mos = age_mos_int+resid_month_decimal,
age_years=age_mos/12) %>%
mutate(
age_years_c=age_years-mean(age_years)
)
average_age <- kid_participant_info %>%
summarize(
N=n(),
mean_age=mean(age_years,na.rm=TRUE),
sd_age=sd(age_years,na.rm=TRUE),
min_age=min(age_years,na.rm=TRUE),
max_age=max(age_years,na.rm=TRUE)
)
average_age %>%
kable()
#check that integration will work
#all subject ids in the response data and the participant info are shared
setdiff(unique(kid_d$subject_id),unique(kid_participant_info$subject_id))
setdiff(unique(kid_participant_info$subject_id),unique(kid_d$subject_id))
kid_d <- kid_d %>%
left_join(select(kid_participant_info,subject_id,age_group,age_mos,age_years,age_years_c,pilot,exclude)) %>%
#convert rt to numeric
mutate(
rt = case_when(
rt=="null" ~ NA,
TRUE ~ as.numeric(rt)
)
)%>%
mutate(exclude_participant = case_when(
exclude == "yes" ~ 1,
exclude == "no" ~ 0,
TRUE ~ 0
))
kid_sampling_data <- kid_sampling_data %>%
left_join(select(kid_participant_info,subject_id,age_group,age_mos,age_years,age_years_c,pilot,exclude))%>%
mutate(exclude_participant = case_when(
exclude == "yes" ~ 1,
exclude == "no" ~ 0,
TRUE ~ 0
))
kid_test_array_clean <- kid_test_array_clean %>%
left_join(select(kid_participant_info,subject_id,age_group,age_mos,age_years,age_years_c,pilot,exclude))%>%
mutate(exclude_participant = case_when(
exclude == "yes" ~ 1,
exclude == "no" ~ 0,
TRUE ~ 0
))
kid_test_array_options_clean <- kid_test_array_options_clean %>%
left_join(select(kid_participant_info,subject_id,age_group,age_mos,age_years,age_years_c,pilot,exclude))%>%
mutate(exclude_participant = case_when(
exclude == "yes" ~ 1,
exclude == "no" ~ 0,
TRUE ~ 0
))
# combine data sets
#first check overlap in columns
setdiff(colnames(kid_d),colnames(adult_d))
setdiff(colnames(adult_d),colnames(kid_d))
#combined
combined_d <- kid_d %>%
bind_rows(adult_d)
combined_sampling_data <- kid_sampling_data %>%
bind_rows(adult_sampling_data)
combined_test_array_clean <- kid_test_array_clean %>%
bind_rows(adult_test_array_clean)
combined_test_array_options_clean <- kid_test_array_options_clean %>%
bind_rows(adult_test_array_options_clean)
## shorter test representation
subj_test_accuracy <- combined_test_array_clean %>%
group_by(sample_group,participant,number_training_images,round,trial_counter,trial_type,current_category_training_level,current_category_label_level,current_category_kind,final_choice_array,total_number_correct_options) %>%
summarize(
total_choices = n(),
ground_truth_correct_choices = sum(test_choice_type_label_consistent),
ground_truth_incorrect_choices = sum(test_choice_type_label_consistent==0),
training_consistent_choices = sum(test_choice_type_training_consistent),
training_inconsistent_choices = sum(test_choice_type_training_consistent==0),
training_category_match_subordinate_choices = sum(test_choice_match_category==1 & test_choice_type == "subordinate"),
training_category_match_basic_choices = sum(test_choice_match_category==1 & test_choice_type == "basic"),
training_category_match_superordinate_choices = sum(test_choice_match_category==1 & test_choice_type == "superordinate"),
training_category_match_subordinate_percent = training_category_match_subordinate_choices,
training_category_match_basic_percent = training_category_match_basic_choices,
training_category_match_superordinate_percent = training_category_match_superordinate_choices/2
)
subj_test_accuracy_long <- subj_test_accuracy %>%
select(sample_group,participant,number_training_images,round,trial_counter,trial_type,current_category_training_level,current_category_label_level,current_category_kind,final_choice_array,total_number_correct_options,training_category_match_subordinate_percent,training_category_match_basic_percent,training_category_match_superordinate_percent) %>%
group_by(participant,number_training_images,round,trial_counter,trial_type,current_category_training_level,current_category_label_level,current_category_kind,final_choice_array,total_number_correct_options) %>%
pivot_longer(cols=training_category_match_subordinate_percent:training_category_match_superordinate_percent,names_to = "choice_type",values_to = "percent_chosen")
overall_accuracy_by_condition <- subj_test_accuracy_long %>%
ungroup() %>%
group_by(sample_group,number_training_images,current_category_training_level,choice_type) %>%
summarize(
N=n(),
average_percent=mean(percent_chosen)
) %>%
mutate(
choice_type = str_remove(choice_type,"training_category_match_"),
choice_type = str_remove(choice_type,"_percent")
)
# looking at if 1- or 3-Item first has an effect
overall_accuracy_by_condition_round <- subj_test_accuracy_long %>%
ungroup() %>%
group_by(sample_group,round,number_training_images,current_category_training_level,choice_type) %>%
summarize(
N=n(),
average_percent=mean(percent_chosen)
) %>%
mutate(
choice_type = str_remove(choice_type,"training_category_match_"),
choice_type = str_remove(choice_type,"_percent")
)
# accuracy based on training condition (N, I, B) and ground-truth (same level or 1 level up)
overall_accuracy_label_level_by_condition <- subj_test_accuracy_long %>%
ungroup() %>%
group_by(sample_group,number_training_images,current_category_training_level,current_category_label_level,choice_type) %>%
summarize(
N=n(),
average_percent=mean(percent_chosen)
) %>%
mutate(
choice_type = str_remove(choice_type,"training_category_match_"),
choice_type = str_remove(choice_type,"_percent")
)
# again, looking at if 1- or 3-Item first has an effect on above accuracy
overall_accuracy_label_level_by_condition_round <- subj_test_accuracy_long %>%
ungroup() %>%
group_by(sample_group,round,number_training_images,current_category_training_level,current_category_label_level,choice_type) %>%
summarize(
N=n(),
average_percent=mean(percent_chosen)
) %>%
mutate(
choice_type = str_remove(choice_type,"training_category_match_"),
choice_type = str_remove(choice_type,"_percent")
)
### longer test representation
subj_test_accuracy_all <- combined_test_array_options_clean %>%
group_by(sample_group,participant,number_training_images,round,trial_counter,trial_type,current_category_training_level,current_category_label_level,current_category_kind,final_choice_array,total_number_correct_options_label,total_number_correct_options_training) %>%
summarize(
accuracy_training = mean(is_match_to_training, na.rm=TRUE),
accuracy_label = mean(is_match_to_label,na.rm=TRUE),
hit_rate_training = mean(hit_training,na.rm=TRUE),
hit_rate_label = mean(hit_label,na.rm=TRUE),
false_alarm_rate_training = mean(false_alarm_training,na.rm=TRUE),
false_alarm_rate_label = mean(false_alarm_label,na.rm=TRUE)
) %>%
mutate(
hit_rate_training_adj= case_when(
hit_rate_training==1 ~ 1 - 1/(2*total_number_correct_options_training),
hit_rate_training==0 ~ 1/(2*total_number_correct_options_training),
TRUE ~ hit_rate_training
),
hit_rate_label_adj= case_when(
hit_rate_label==1 ~ 1 - 1/(2*total_number_correct_options_label),
hit_rate_label==0 ~ 1/(2*total_number_correct_options_label),
TRUE ~ hit_rate_label
),
false_alarm_rate_training_adj= case_when(
false_alarm_rate_training==0 ~ 1/(2*total_number_correct_options_training),
false_alarm_rate_training==1 ~ 1 - 1/(2*total_number_correct_options_training),
TRUE ~ false_alarm_rate_training
),
false_alarm_rate_label_adj= case_when(
false_alarm_rate_label==0 ~ 1/(2*total_number_correct_options_label),
false_alarm_rate_label==1 ~ 1 - 1/(2*total_number_correct_options_label),
TRUE ~ false_alarm_rate_label
)
) %>%
mutate(
dprime_training=qnorm(hit_rate_training_adj) - qnorm(false_alarm_rate_training_adj),
dprime_label=qnorm(hit_rate_label_adj) - qnorm(false_alarm_rate_label_adj),
c_training=-.5*(qnorm(hit_rate_training_adj) + qnorm(false_alarm_rate_training_adj)),
c_label=-.5*(qnorm(hit_rate_label_adj) + qnorm(false_alarm_rate_label_adj)))
subj_test_accuracy_all <- subj_test_accuracy_all %>%
left_join(combined_sampling_data)
# gives accuracy based on training level, ground-truth level, and if sampling was confirm/explore
#need fix sampling choice type in adults here
overall_accuracy_label_level_sampling_all <- subj_test_accuracy_all %>%
ungroup() %>%
group_by(sample_group,sampling_choice_type,current_category_training_level,current_category_label_level) %>%
summarize(
N=n(),
average_dprime_training=mean(dprime_training),
average_dprime_label=mean(dprime_label)
)
combined_sampling_data <- combined_sampling_data %>%
mutate(
sampled_category_level_kind_info_choice_order = case_when(
sampled_category_level_kind_info == "outside_category" ~ "a_outside_category",
sampled_category_level_kind_info == "sub" ~ "b_sub",
sampled_category_level_kind_info == "bas" ~ "c_bas",
sampled_category_level_kind_info == "sup" ~ "d_sup"
),
current_category_training_level_order = case_when(
current_category_training_level == "narrow" ~ "a_narrow",
current_category_training_level == "intermediate" ~ "b_intermediate",
current_category_training_level == "broad" ~ "c_broad"
)
)
combined_sampling_data_3_images_only <- combined_sampling_data %>%
filter(number_training_images==3)
#fit multinomial model
nnetFixedModelStr <- 'sampled_category_level_kind_info_choice_order ~ current_category_training_level_order'
nnetFixedFit_kids <-  multinom(as.formula(nnetFixedModelStr), filter(combined_sampling_data_3_images_only,sample_group=="children"), maxit=10000, abstol=1e-8, reltol=1e-10)
summary(nnetFixedFit_kids)
Anova(nnetFixedFit_kids,type="III")
# Alternative (equivalent) approach with mlogit
# reformat data for mlogit
mlogit_sampling_data_kids <-  mlogit.data(data=select(filter(combined_sampling_data_3_images_only,sample_group=="children"),participant,sampled_category_level_kind_info_choice_order,current_category_training_level_order,current_category_kind), choice='sampled_category_level_kind_info_choice_order', shape="wide", id.var='participant')
# specify model formula
mlogit_sampling_formula_baseline <- ' sampled_category_level_kind_info_choice_order ~ 0 | 1 | 0'
mlogit_sampling_formula_training <- 'sampled_category_level_kind_info_choice_order ~ 0 | current_category_training_level_order | 0'
# fit models
mlogit_sampling_baseline_kids <- mlogit(as.formula(mlogit_sampling_formula_baseline), data=mlogit_sampling_data_kids, panel=FALSE, iterlim=10000, tol = 1e-8)
print(summary(mlogit_sampling_baseline_kids))
mlogit_sampling_training_kids <- mlogit(as.formula(mlogit_sampling_formula_training), data=mlogit_sampling_data_kids, panel=FALSE, iterlim=10000, tol = 1e-8)
print(summary(mlogit_sampling_training_kids))
# overall test of condition (identical result to nnet method above)
lrtest(mlogit_sampling_baseline_kids,mlogit_sampling_training_kids)
#fit multinomial model
nnetFixedFit_adults <-  multinom(as.formula(nnetFixedModelStr), filter(combined_sampling_data_3_images_only,sample_group=="adults"), maxit=10000, abstol=1e-8, reltol=1e-10)
summary(nnetFixedFit_adults)
Anova(nnetFixedFit_adults,type="III")
# Alternative (equivalent) approach with mlogit
# reformat data for mlogit
mlogit_sampling_data_adults <-  mlogit.data(data=select(filter(combined_sampling_data_3_images_only,sample_group=="adults"),participant,sampled_category_level_kind_info_choice_order,current_category_training_level_order,current_category_kind), choice='sampled_category_level_kind_info_choice_order', shape="wide", id.var='participant')
# fit models
mlogit_sampling_baseline_adults <- mlogit(as.formula(mlogit_sampling_formula_baseline), data=mlogit_sampling_data_adults, panel=FALSE, iterlim=10000, tol = 1e-8)
print(summary(mlogit_sampling_baseline_adults))
mlogit_sampling_training_adults <- mlogit(as.formula(mlogit_sampling_formula_training), data=mlogit_sampling_data_adults, panel=FALSE, iterlim=10000, tol = 1e-8)
print(summary(mlogit_sampling_training_adults))
# overall test of condition (identical result to nnet method above)
lrtest(mlogit_sampling_baseline_adults,mlogit_sampling_training_adults)
#fit multinomial model
nnetFixedModelStr_age <- 'sampled_category_level_kind_info_choice_order ~ current_category_training_level_order*age_years'
nnetFixedFit_age <-  multinom(as.formula(nnetFixedModelStr_age), filter(combined_sampling_data_3_images_only,sample_group=="children"), maxit=10000, abstol=1e-8, reltol=1e-10)
summary(nnetFixedFit_age)
Anova(nnetFixedFit_age,type="III")
combined_sampling_data <- combined_sampling_data |>
mutate(
sample_subordinate_choice = ifelse(sampled_category_level_kind_info_choice_order == "b_sub", 1,0),
sample_basic_choice = ifelse(sampled_category_level_kind_info_choice_order == "c_bas", 1,0),
sample_superordinate_choice = ifelse(sampled_category_level_kind_info_choice_order == "d_sup", 1,0),
sample_outside_choice = ifelse(sampled_category_level_kind_info_choice_order == "a_outside_category", 1,0)
)
p1 <- combined_sampling_data %>%
filter(number_training_images==3 & sample_group=="children") %>%
ggplot(aes(age_years,sample_subordinate_choice))+
geom_smooth(aes(color=current_category_training_level),method="lm",se=F,alpha=0.5)+
geom_smooth(method="lm")
p2 <- combined_sampling_data %>%
filter(number_training_images==3 & sample_group=="children") %>%
ggplot(aes(age_years,sample_basic_choice))+
geom_smooth(aes(color=current_category_training_level),method="lm",se=F,alpha=0.5)+
geom_smooth(method="lm")
p3 <- combined_sampling_data %>%
filter(number_training_images==3 & sample_group=="children") %>%
ggplot(aes(age_years,sample_superordinate_choice))+
geom_smooth(aes(color=current_category_training_level),method="lm",se=F,alpha=0.5)+
geom_smooth(method="lm")
p4 <- combined_sampling_data %>%
filter(number_training_images==3 & sample_group=="children") %>%
ggplot(aes(age_years,sample_outside_choice))+
geom_smooth(aes(color=current_category_training_level),method="lm",se=F,alpha=0.5)+
geom_smooth(method="lm")
(p1+p2)/(p3+p4)
(p1+p2)/(p3+p4)
(p1+p2)/(p3+p4)
#filter relevant conditions
combined_sampling_data_1_vs_3 <- combined_sampling_data %>%
filter(current_category_training_level=="narrow") %>%
mutate(
number_training_images_c=(number_training_images-2)/2
)
#fit multinomial model
nnetFixedModelStr_h2a <- 'sampled_category_level_kind_info_choice_order ~ number_training_images_c'
nnetFixedFit_h2a_kids <-  multinom(as.formula(nnetFixedModelStr_h2a), filter(combined_sampling_data_1_vs_3,sample_group=="children"), maxit=10000, abstol=1e-8, reltol=1e-10)
summary(nnetFixedFit_h2a_kids)
Anova(nnetFixedFit_h2a_kids,type="III")
nnetFixedFit_h2a_adults <-  multinom(as.formula(nnetFixedModelStr_h2a), filter(combined_sampling_data_1_vs_3,sample_group=="adults"), maxit=10000, abstol=1e-8, reltol=1e-10)
summary(nnetFixedFit_h2a_adults)
Anova(nnetFixedFit_h2a_adults,type="III")
#fit multinomial model
nnetFixedModelStr_h2a_age <- 'sampled_category_level_kind_info_choice_order ~ number_training_images_c*age_years'
nnetFixedFit_h2a_age <-  multinom(as.formula(nnetFixedModelStr_h2a_age), filter(combined_sampling_data_1_vs_3,sample_group=="children"), maxit=10000, abstol=1e-8, reltol=1e-10)
summary(nnetFixedFit_h2a_age)
Anova(nnetFixedFit_h2a_age,type="III")
combined_sampling_data$sampled_category_level_kind_info_ord <- factor(combined_sampling_data$sampled_category_level_kind_info,                                                           levels=c("sub","bas","sup","outside_category"),
labels=c("subordinate","basic","superordinate","outside category"))
combined_sampling_data$current_category_training_level_ord <- factor(combined_sampling_data$current_category_training_level,levels=c("narrow","intermediate","broad"))
ggplot(combined_sampling_data,aes(current_category_training_level_ord,fill=sampled_category_level_kind_info_ord))+
geom_bar(position="fill")+
scale_fill_brewer(name="Sampling Choice Type",palette="RdYlBu")+
xlab("Training Condition")+
ylab("Proportion of Sampling Choices")+
facet_wrap(~number_training_images+sample_group)#+
# theme_cowplot(font_size=24)+
# theme(axis.title = element_text(face="bold", size=20),
#       axis.text.x  = element_text(angle=90, hjust=1,vjust=0.4))
## Sampling Choices - individual bars
combined_sampling_data_long_structure <- expand.grid(
participant=unique(combined_sampling_data$participant),
trial_counter=seq(1,6),
sampling_choice_type = c("subordinate","basic","superordinate","outside category")
)
combined_sampling_data_long <-  combined_sampling_data %>%
group_by(participant,sample_group,number_training_images,trial_counter, current_category_training_level) %>%
summarize(sampling_response = sampled_category_level_kind_info_ord) %>%
arrange(participant,trial_counter)
combined_sampling_data_long_structure <- combined_sampling_data_long_structure %>%
left_join(combined_sampling_data_long) %>%
mutate(
sampling_choice_chosen = case_when(
sampling_response == sampling_choice_type ~ 1,
TRUE ~ 0
)
)
combined_sampling_data_long_structure_summarized <- combined_sampling_data_long_structure %>%
group_by(sample_group,number_training_images,current_category_training_level, sampling_choice_type) %>%
summarize(
N=n(),
sampling_response_avg=mean(sampling_choice_chosen,na.rm=TRUE),
sampling_response_total=sum(sampling_choice_chosen,na.rm=TRUE),
sampling_response_binom_lower=binom.test(sampling_response_total,N)$conf.int[1],
sampling_response_binom_upper=binom.test(sampling_response_total,N)$conf.int[2],
)
combined_sampling_data_long_structure_summarized$current_category_training_level_ord <- factor(combined_sampling_data_long_structure_summarized$current_category_training_level,levels=c("narrow","intermediate","broad"))
ggplot(combined_sampling_data_long_structure_summarized,aes(current_category_training_level_ord,sampling_response_avg, group=sampling_choice_type,fill=sampling_choice_type))+
geom_errorbar(aes(ymin=sampling_response_binom_lower, ymax=sampling_response_binom_upper),width=0.3, color="black",position=position_dodge(width=0.9))+
geom_bar(stat="identity",position=position_dodge())+
#theme_cowplot(font_size=30)+
scale_fill_brewer(name="Sampling Choice Type",palette="RdYlBu")+
scale_color_brewer(name="Sampling Choice Type",palette="RdYlBu")+
xlab("Training Condition")+
ylab("Proportion of Sampling Choices")+
facet_wrap(~number_training_images+sample_group)
library(here)
library(tidyverse)
library(jsonlite)
library(tidyjson)
library(rlang)
library(stringdist)
source("helper.R")
data_path <- here("..","data","processed", "kitty-act-v1a-alldata-anonymized.csv")
write_path <- here("..","data","processed")
#### read in data ####
d <- read_csv(data_path)
data_path <- here("..","data","processed", "kitty-act-v1a-alldata-anonymized.csv")
write_path <- here("..","data","processed")
#### read in data ####
d <- read_csv(data_path)
library(here)
library(tidyverse)
library(ggplot2)
library(viridisLite)
library(lme4)
library(ggstance)
library(cowplot)
library(AICcmodavg)
library(RColorBrewer)
library(jsonlite)
library(tidyjson)
library(rlang)
library(car)
library(nnet)
library(mlogit)
library(lmerTest)
library(assertthat)
library(knitr)
library(patchwork)
source("helper.R")
d <- read_csv("/Users/jaimechen/Desktop/GitHub/kitty-act/analysis/v1a/data")
d <- read_csv("Users/jaimechen/Desktop/GitHub/kitty-act/analysis/v1a/data")
d <- read_csv("/Users/jaimechen/Desktop/GitHub/kitty-act/analysis/v1a/data")
d <- read_csv("/Users/jaimechen/Desktop/GitHub/kitty-act/analysis/v1a/data/kitty-act-v1a-alldata-anonymized.csv")
d <- read_csv("/Users/jaimechen/Desktop/GitHub/kitty-act/analysis/v1a/data/processed/kitty-act-v1a-alldata-anonymized.csv")
View(d)
d2 <- read_csv("/Users/jaimechen/Desktop/GitHub/kitty-act/analysis/v1a/data/processed/kitty-act_v1a-alldata-processed.csv")
View(d2)
